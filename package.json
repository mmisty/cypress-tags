{
  "name": "@mmisty/cypress-tags",
  "version": "1.0.0",
  "description": "Parses tags from test/suite title or/and from cypress configuration object into test .tags object",
  "main": "index.js",
  "repository": "git@github.com:mmisty/cypress-tags.git",
  "homepage": "https://github.com/mmisty/cypress-tags#readme",
  "publishConfig": {
    "registry": "https://registry.npmjs.org/"
  },
  "license": "Apache-2.0",
  "author": "Taisia Pitko (mmisty) <minydas@yandex.ru>",
  "keywords": [
    "cypress",
    "e2e",
    "tags",
    "tests",
    "typescript"
  ],
  "scripts": {
    "husky:install": "husky install",
    "lint": "eslint --fix '**/*.{ts,tsx,js}'",
    "test": "jest --reporters=default --reporters=jest-junit",
    "test:cov": "jest --runInBand --coverage --coverageDirectory reports/coverage-jest --reporters=default --reporters=jest-junit",
    "cy": "cypress",
    "cy:open": "npm run cy -- open --e2e",
    "cy:run": "npm run cy -- run --browser chrome --headless",
    "cy:run:cov": "COVERAGE_REPORT_DIR=reports/coverage-cypress COVERAGE=true npm run cy -- run",
    "cy:open:cov": "COVERAGE_REPORT_DIR=reports/coverage-cypress COVERAGE=true npm run cy -- open",
    "build": "tsc --project tsconfig.build.json",
    "build:tests": "tsc && cd tests && tsc",
    "build:cy": "cd integration && tsc",
    "build:all": "npm run build && npm run build:cy && npm run build:tests",
    "test:all": "npm run test:cov && npm run cy:run:cov",
    "cov:merge": "node ./.scripts/merge.js --cypress reports/coverage-cypress --jest reports/coverage-jest --out reports/coverage-temp --report reports/coverage-full",
    "cov:fin": "echo 'this applies nyc config to report' && npx nyc report -t reports/coverage-full --report-dir reports/coverage-full-total",
    "cov": "http-server reports/coverage-full/lcov-report",
    "cov:jest": "http-server reports/coverage-jest/lcov-report",
    "cov:cy": "http-server reports/coverage-cypress/lcov-report",
    "cov:check": "COVERAGE_TEMP=reports/coverage-temp nyc check-coverage",
    "all": "npm run pre && npm run cov:check && npm run cov",
    "pre": "rm -rf ./node_modules/.cache lib reports coverage-nyc .nyc_output && npm run lint && npm run build:all && npm run test:all && npm run cov:merge",
    "prepublishOnly": "{ echo \"Run script 'npm run publish:pack', 'npm run publish:minor', etc from package.json\n\"; exit 1; }",
    "pack": "npm run build && cp package.json ./lib/package.json && cp README.md ./lib/README.md && cp CHANGELOG.md ./lib/CHANGELOG.md && sh .scripts/remove.sh && cd lib && npm version $ver --no-git-tag-version ",
    "prepublish": "npm run lint",
    "publishPack": "npm run pack && cd lib && npm publish --tag $TAG",
    "publish:alpha": "export TAG=alpha && export ver=$(semver $(npm show . version --tag alpha || npm show . version) --increment -i prerelease  --preid 'alpha') && npm run publishPack && npm run postpublish",
    "publish:alpha:init": "export TAG=alpha && export ver=$(semver $(npm show . version) --increment -i prerelease  --preid 'alpha') && npm run publishPack && npm run postpublish",
    "publish:patch": "export TAG=latest && export ver=$(semver $(npm show . version) --increment -i patch) && npm run publishPack && npm run postpublish",
    "publish:minor": "export TAG=latest && export ver=$(semver $(npm show . version) --increment -i minor) && npm run publishPack && npm run postpublish",
    "publish:major": "export TAG=latest && export ver=$(semver $(npm show . version) --increment -i major) && npm run publishPack && npm run postpublish",
    "publish:pack": "export TAG=alpha && export ver=\"1.0.3-alpha\" && npm run publishPack && npm run postpublish",
    "postpublish": "git tag v$ver"
  },
  "jest-junit": {
    "suiteName": "jest tests",
    "outputDirectory": "./reports/jest",
    "outputName": "junit.xml",
    "uniqueOutputName": "false",
    "classNameTemplate": "{classname}-{title}",
    "titleTemplate": "{classname}-{title}",
    "ancestorSeparator": " â€º ",
    "usePathForSuiteName": "true"
  },
  "devDependencies": {
    "@cypress/code-coverage": "^3.12.39",
    "@ephesoft/webpack.istanbul.loader": "^2.2.0",
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@types/jest": "^29.5.12",
    "@types/node": "^18.19.34",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "babel-core": "7.0.0-bridge.0",
    "babel-eslint": "9.0.0",
    "babel-loader": "8.3.0",
    "babel-plugin-istanbul": "^5.2.0",
    "babel-plugin-named-asset-import": "^0.3.8",
    "babel-preset-react-app": "^7.0.2",
    "cypress": "^13.11.0",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^8.10.0",
    "eslint-plugin-cypress": "^2.15.2",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jest": "^27.9.0",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-plugin-promise": "^6.2.0",
    "husky": "^8.0.3",
    "istanbul-lib-coverage": "^3.2.2",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-junit": "^16.0.0",
    "jest-test-each": "^0.9.1",
    "nyc": "^15.1.0",
    "semver": "^7.6.2",
    "ts-jest": "^29.1.4",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths-webpack-plugin": "^4.1.0",
    "typescript": "^4.9.5",
    "webpack": "^5.92.0"
  },
  "overrides": {
    "loader-utils": "1.4.2"
  },
  "engines": {
    "node": ">=16",
    "npm": ">=8"
  },
  "volta": {
    "node": "16.16.0",
    "npm": "8.11.0"
  }
}
